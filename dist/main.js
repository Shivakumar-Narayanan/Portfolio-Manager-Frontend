/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("// Example data fetched from your Spring Boot REST API\r\nconst stockIndexesIndia = [\r\n    { direction: \"profit\", name: \"NIFTY 50\", totalPoints: 17990, percentageChange: 4.4, pointsLost: 34 },\r\n    { direction: \"loss\", name: \"Sensex\", totalPoints: 4500, percentageChange: -2.1, pointsLost: 95 }\r\n];\r\n\r\nconst stockIndexesWorld = [\r\n    { direction: \"profit\", name: \"Dow Jones\", totalPoints: 34000, percentageChange: 3.2, pointsLost: 58 },\r\n    { direction: \"profit\", name: \"NASDAQ\", totalPoints: 15000, percentageChange: 5.7, pointsLost: 72 },\r\n    { direction: \"loss\", name: \"FTSE 100\", totalPoints: 6500, percentageChange: -1.8, pointsLost: 48 },\r\n    { direction: \"profit\", name: \"Hang Seng\", totalPoints: 26000, percentageChange: 2.6, pointsLost: 68 }\r\n];\r\n\r\nfunction createStockIndexCard(indexData) {\r\n    const cardContainer = document.getElementById('stockIndexContainer');\r\n\r\n    // Create the card div element\r\n    const card = document.createElement('div');\r\n    card.className = 'bg-white ml-2 mt-2 w-48 p-1 pr-7 rounded-lg shadow-md flex flex-row';\r\n\r\n    // Left Section (1:6 ratio)\r\n    const leftSection = document.createElement('div');\r\n    leftSection.className = indexData.direction === 'profit' ? 'w-1/7 flex flex-col justify-center rounded-md items-center bg-green-200 mt-3 mb-3 pr-1 pl-1' : 'w-1/7 flex flex-col justify-center rounded-md items-center bg-red-200 mt-3 mb-3 pr-1 pl-1'\r\n\r\n    // Use the appropriate template based on the direction\r\n    const arrowTemplate = document.getElementById(indexData.direction === 'profit' ? 'profit-arrow' : 'loss-arrow');\r\n    if (arrowTemplate) {\r\n        // Clone the template content and append it to the left section\r\n        const arrowIcon = document.importNode(arrowTemplate.content, true);\r\n        leftSection.appendChild(arrowIcon);\r\n    }\r\n\r\n    // Right Section (6:1 ratio)\r\n    const rightSection = document.createElement('div');\r\n    rightSection.className = 'w-6/7 flex flex-between justify-center';\r\n\r\n    // Stock index details\r\n    const stockDetails = document.createElement('div');\r\n    stockDetails.className = 'w-3/4 p-2';\r\n\r\n    const indexName = document.createElement('p');\r\n    indexName.className = 'text-black text-sm font-semibold';\r\n    indexName.textContent = indexData.name;\r\n\r\n    const indexTotalPoints = document.createElement('p');\r\n    indexTotalPoints.className = 'text-black text-sm font-normal';\r\n    indexTotalPoints.textContent = indexData.totalPoints.toLocaleString();\r\n\r\n    stockDetails.appendChild(indexName);\r\n    stockDetails.appendChild(indexTotalPoints);\r\n\r\n    // Percentage change and points lost\r\n    const changeDetails = document.createElement('div');\r\n    changeDetails.className = 'w-1/4 p-2';\r\n\r\n    const percentageChange = document.createElement('p');\r\n    percentageChange.className = indexData.direction === 'profit' ? 'text-green-500 text-sm font-semibold' : 'text-red-500 text-sm font-semibold';\r\n    percentageChange.textContent = indexData.percentageChange + '%';\r\n\r\n    const pointsLost = document.createElement('p');\r\n    pointsLost.className = indexData.direction === 'profit' ? 'text-green-500 text-sm font-normal' : 'text-red-500 text-sm font-normal';\r\n    pointsLost.textContent = indexData.pointsLost + 'pts';\r\n\r\n    changeDetails.appendChild(percentageChange);\r\n    changeDetails.appendChild(pointsLost);\r\n\r\n    // Append sections to the card\r\n    rightSection.appendChild(stockDetails);\r\n    rightSection.appendChild(changeDetails);\r\n    card.appendChild(leftSection);\r\n    card.appendChild(rightSection);\r\n\r\n    // Append the card to the container\r\n    cardContainer.appendChild(card);\r\n}\r\n\r\n// // Loop through the stock index data and create cards\r\n// stockIndexes.forEach((indexData) => {\r\n//     createStockIndexCard(indexData);\r\n// });\r\n\r\n\r\n// Function to display India-specific cards\r\nfunction displayIndiaStockIndexes() {\r\n    const cardContainer = document.getElementById('stockIndexContainer');\r\n    cardContainer.innerHTML = ''; // Clear existing cards\r\n\r\n    // Loop through India-specific stock index data and create cards\r\n    stockIndexesIndia.forEach((indexData) => {\r\n        createStockIndexCard(indexData);\r\n    });\r\n\r\n    // Toggle tab styles\r\n    const indiaTab = document.getElementById('indiaTab');\r\n    const worldTab = document.getElementById('worldTab');\r\n    indiaTab.classList.add('text-blue-600', 'bg-gray-100', 'active', 'dark:bg-gray-800', 'dark:text-blue-500');\r\n    indiaTab.classList.remove('hover:text-gray-600', 'hover:bg-gray-50', 'dark:hover:bg-gray-800', 'dark:hover:text-gray-300');\r\n    worldTab.classList.remove('text-blue-600', 'bg-gray-100', 'active', 'dark:bg-gray-800', 'dark:text-blue-500');\r\n    worldTab.classList.add('hover:text-gray-600', 'hover:bg-gray-50', 'dark:hover:bg-gray-800', 'dark:hover:text-gray-300');\r\n}\r\n\r\n// Function to display Rest of World-specific cards\r\nfunction displayWorldStockIndexes() {\r\n    const cardContainer = document.getElementById('stockIndexContainer');\r\n    cardContainer.innerHTML = ''; // Clear existing cards\r\n\r\n    // Loop through Rest of World-specific stock index data and create cards\r\n    stockIndexesWorld.forEach((indexData) => {\r\n        createStockIndexCard(indexData);\r\n    });\r\n\r\n    // Toggle tab styles\r\n    const indiaTab = document.getElementById('indiaTab');\r\n    const worldTab = document.getElementById('worldTab');\r\n    worldTab.classList.add('text-blue-600', 'bg-gray-100', 'active', 'dark:bg-gray-800', 'dark:text-blue-500');\r\n    worldTab.classList.remove('hover:text-gray-600', 'hover:bg-gray-50', 'dark:hover:bg-gray-800', 'dark:hover:text-gray-300');\r\n    indiaTab.classList.remove('text-blue-600', 'bg-gray-100', 'active', 'dark:bg-gray-800', 'dark:text-blue-500');\r\n    indiaTab.classList.add('hover:text-gray-600', 'hover:bg-gray-50', 'dark:hover:bg-gray-800', 'dark:hover:text-gray-300');\r\n}\r\n\r\n// Event listeners for tab buttons\r\nconst indiaTab = document.getElementById('indiaTab');\r\nconst worldTab = document.getElementById('worldTab');\r\n\r\nindiaTab.addEventListener('click', () => {\r\n    displayIndiaStockIndexes();\r\n});\r\n\r\nworldTab.addEventListener('click', () => {\r\n    displayWorldStockIndexes();\r\n});\r\n\r\n// Initially, display India-specific cards by default\r\ndisplayIndiaStockIndexes();\r\n\r\n        // Sample data with 300 data points\r\n        const data = [];\r\n        for (let i = 0; i < 100; i++) {\r\n            data.push(Math.floor(Math.random() * 1000));\r\n        }\r\n    \r\n        // ApexCharts options and config\r\n        window.addEventListener(\"load\", function () {\r\n            let options = {\r\n                chart: {\r\n                    height: \"400\", // Adjust the height here\r\n                    width: \"800\", // Adjust the width here\r\n                    type: \"area\",\r\n                    fontFamily: \"Inter, sans-serif\",\r\n                    dropShadow: {\r\n                        enabled: false,\r\n                    },\r\n                    toolbar: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    x: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                fill: {\r\n                    type: \"gradient\",\r\n                    gradient: {\r\n                        opacityFrom: 0.55,\r\n                        opacityTo: 0,\r\n                        shade: \"#5fba77\",\r\n                        gradientToColors: [\"#5fba77\"],\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: false,\r\n                },\r\n                stroke: {\r\n                    width: 2, // Adjust the line thickness here\r\n                },\r\n                grid: {\r\n                    show: false,\r\n                    strokeDashArray: 4,\r\n                    padding: {\r\n                        left: 2,\r\n                        right: 2,\r\n                        top: 0,\r\n                    },\r\n                },\r\n                series: [\r\n                    {\r\n                        name: \"Stock Data\",\r\n                        data: data,\r\n                        color: \"#5fba77\",\r\n                    },\r\n                ],\r\n                xaxis: {\r\n                    categories: data.map((_, index) => index),\r\n                    labels: {\r\n                        show: false,\r\n                    },\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                },\r\n                yaxis: {\r\n                    show: true,\r\n                },\r\n            };\r\n    \r\n            if (document.getElementById(\"area-chart\") && typeof ApexCharts !== 'undefined') {\r\n                const chart = new ApexCharts(document.getElementById(\"area-chart\"), options);\r\n                chart.render();\r\n            }\r\n        });\n\n//# sourceURL=webpack://portfolio-manager-frontend/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;